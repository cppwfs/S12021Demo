spring.batch.job.jdbccursoritemreader.name=fooReader
spring.batch.job.jdbccursoritemreader.sql=select id, first_name, last_name, planid, plan_name, call_price , data_price, sum(usage_in_minutes) as usage_in_minutes, sum(usage_in_bytes) as usage_in_bytes from (select id, first_name, last_name, plans.plan_id as planid , plan_name, call_price ,data_price, usage_in_minutes, 0 as usage_in_bytes, call_usage.date from users, plans, call_usage where users.plan_id = plans.plan_id and users.id = call_usage.user_id UNION select id, first_name, last_name, plans.plan_id as planid, plan_name, call_price, data_price ,0 as usage_in_minutes, usage_in_bytes as use_amount, data_usage.date from users, plans, data_usage where users.plan_id = plans.plan_id and users.id = data_usage.user_id) d group by id, first_name, last_name, planid, plan_name, call_price, data_price

spring.batch.job.flatfileitemwriter.name=fooWriter
spring.batch.job.flatfileitemwriter.resource=file:///tmp/billrunresult.txt
spring.batch.job.flatfileitemwriter.encoding=UTF-16
spring.batch.job.flatfileitemwriter.saveState=false
spring.batch.job.flatfileitemwriter.shouldDeleteIfEmpty=true
spring.batch.job.flatfileitemwriter.delimited=true
spring.batch.job.flatfileitemwriter.names=id, first_name, last_name, planid, plan_name, call_price, data_price, usage_in_minutes, usage_in_bytes, data_bill_amount, call_bill_amount, total_bill_amount
spring.batch.job.flatfileitemwriter.append=true
spring.batch.job.flatfileitemwriter.forceSync=true
spring.batch.job.flatfileitemwriter.shouldDeleteIfExists=false
spring.batch.job.flatfileitemwriter.transactional=false

spring.application.name=BillRunSample
spring.batch.job.jobName=billrunjob
spring.batch.job.stepName=billrunstep
spring.batch.job.chunkSize=5